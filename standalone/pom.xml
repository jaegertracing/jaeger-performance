<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2018 The Jaeger Authors

    Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
    in compliance with the License. You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software distributed under the License
    is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
    or implied. See the License for the specific language governing permissions and limitations under
    the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.jaegertracing.qe</groupId>
        <artifactId>jaeger-performance-tests</artifactId>
        <version>1.2.0</version>
    </parent>

    <groupId>io.jaegertracing.qe</groupId>
    <artifactId>jaeger-standalone-performance-tests</artifactId>
    <version>1.2.0</version>

    <properties>
        <!-- Dependency versions -->
        <exec-maven-plugin.version>1.6.0</exec-maven-plugin.version>
        <rootProject.basedir>${project.basedir}/..</rootProject.basedir>


        <!-- Default parameter values for deploying to OpenShift -->
        <delay>10</delay>
        <duration.in.minutes>1</duration.in.minutes>
        <jaeger.agent.host>localhost</jaeger.agent.host>
        <jaeger.collector.host>jaeger-collector</jaeger.collector.host>
        <jaeger.collector.port>14268</jaeger.collector.port>
        <jaeger.flush.interval>100</jaeger.flush.interval>
        <jaeger.max.packet.size>0</jaeger.max.packet.size>
        <jaeger.max.queue.size>100000</jaeger.max.queue.size>
        <jaeger.performance.rest.client.version>1.2.0</jaeger.performance.rest.client.version>
        <jaeger.sampling.rate>1.0</jaeger.sampling.rate>
        <jaeger.udp.port>6831</jaeger.udp.port>
        <pod.count>1</pod.count>
        <test.service.name>standalone</test.service.name>
        <thread.count>100</thread.count>
        <use.agent.or.collector>COLLECTOR</use.agent.or.collector>
        <use.logging.reporter>false</use.logging.reporter>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.jaegertracing.qe</groupId>
            <artifactId>jaeger-performance-rest-client</artifactId>
            <version>${jaeger.performance.rest.client.version}</version>
        </dependency>
        <dependency>
            <groupId>com.uber.jaeger</groupId>
            <artifactId>jaeger-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.datastax.cassandra</groupId>
            <artifactId>cassandra-driver-core</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>openshift-client</artifactId>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>kubernetes-client</artifactId>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>kubernetes-model</artifactId>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
        </dependency>

        <dependency>
            <groupId>org.elasticsearch.client</groupId>
            <artifactId>elasticsearch-rest-client</artifactId>
        </dependency>
        <!-- For JSON -->
        <!-- https://mvnrepository.com/artifact/javax.ws.rs/javax.ws.rs-api -->
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.glassfish.jersey.core/jersey-client -->
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${exec-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>java</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <mainClass>io.jaegertracing.qe.CreateTraces</mainClass>
                    <cleanupDaemonThreads>false</cleanupDaemonThreads>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>openshift</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>fabric8-maven-plugin</artifactId>
                        <version>${fabric8-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>resource</goal>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <enricher>
                                <config>
                                    <fmp-controller>
                                        <type>Job</type>
                                    </fmp-controller>
                                </config>
                            </enricher>
                            <resources>
                                <env>
                                    <DELAY>${delay}</DELAY>
                                    <DURATION_IN_MINUTES>${duration.in.minutes}</DURATION_IN_MINUTES>
                                    <JAEGER_AGENT_HOST>${jaeger.agent.host}</JAEGER_AGENT_HOST>
                                    <JAEGER_COLLECTOR_HOST>${jaeger.collector.host}</JAEGER_COLLECTOR_HOST>
                                    <JAEGER_COLLECTOR_PORT>${jaeger.collector.port}</JAEGER_COLLECTOR_PORT>
                                    <JAEGER_FLUSH_INTERVAL>${jaeger.flush.interval}</JAEGER_FLUSH_INTERVAL>
                                    <JAEGER_MAX_PACKET_SIZE>${jaeger.max.packet.size}</JAEGER_MAX_PACKET_SIZE>
                                    <JAEGER_MAX_QUEUE_SIZE>${jaeger.max.queue.size}</JAEGER_MAX_QUEUE_SIZE>
                                    <JAEGER_SAMPLING_RATE>${jaeger.sampling.rate}</JAEGER_SAMPLING_RATE>
                                    <JAEGER_UDP_PORT>${jaeger.udp.port}</JAEGER_UDP_PORT>
                                    <TEST_SERVICE_NAME>${test.service.name}</TEST_SERVICE_NAME>
                                    <THREAD_COUNT>${thread.count}</THREAD_COUNT>
                                    <USE_AGENT_OR_COLLECTOR>${use.agent.or.collector}</USE_AGENT_OR_COLLECTOR>
                                    <USE_LOGGING_REPORTER>${use.logging.reporter}</USE_LOGGING_REPORTER>
                                </env>
                            </resources>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>validate</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${maven.failsafe.plugin.version}</version>
                        <executions>
                            <execution>
                                <id>run-integration-tests</id>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                                <configuration>
                                    <includes>
                                        <include>**/*Test.java</include>
                                    </includes>
                                    <!-- The ValidateTracesTest needs to run first -->
                                    <runOrder>reversealphabetical</runOrder>
                                </configuration>
                            </execution>
                            <execution>
                                <id>verify</id>
                                <goals>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>

        </profile>
    </profiles>

</project>
